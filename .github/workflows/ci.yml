name: Continuous Integration
on: push

jobs:
  unit-test:
    name: Unit Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x, 22.x]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get NPM Cache Directory for linux and macos
        if: runner.os != 'Windows'
        id: npm-cache-dir
        run: |
            echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - name: Cache NPM for linux and macos
        if: runner.os != 'Windows'
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Get NPM Cache Directory for Windows
        if: runner.os == 'Windows'
        id: npm-cache-dir-windows
        run: |
          echo "dir=$(npm config get cache)" >> $env:GITHUB_OUTPUT
      - name: Cache NPM for Windows
        if: runner.os == 'Windows'
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir-windows.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm test
      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage-${{ matrix.os }}-${{ matrix.node-version }}
          path: coverage
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Node.js 22.x
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
      - name: Get NPM Cache Directory for linux and macos
        if: runner.os != 'Windows'
        id: npm-cache-dir
        run: |
            echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - name: Cache NPM for linux and macos
        if: runner.os != 'Windows'
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Get NPM Cache Directory for Windows
        if: runner.os == 'Windows'
        id: npm-cache-dir-windows
        run: |
          echo "dir=$(npm config get cache)" >> $env:GITHUB_OUTPUT
      - name: Cache NPM for Windows
        if: runner.os == 'Windows'
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir-windows.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint